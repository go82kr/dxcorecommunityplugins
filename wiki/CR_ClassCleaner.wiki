#summary Organises your code (optionally using regions) based on settings provided.
[http://www.rorybecker.me.uk/DevExpress/Plugins/Community/CR_ClassCleaner http://dxcorecommunityplugins.googlecode.com/svn/trunk/Common/Graphics/Download.png]      [http://code.google.com/p/dxcorecommunityplugins/wiki/InstallInstructions  http://dxcorecommunityplugins.googlecode.com/svn/trunk/Common/Graphics/InstallHelp.png]
[http://code.google.com/p/dxcorecommunityplugins/wiki/Feedback  http://dxcorecommunityplugins.googlecode.com/svn/trunk/Common/Graphics/Feedback.png]

=== Introduction ===
(Note: This text "Borrowed" :) from [http://unhandled-exceptions.com/blog/index.php/2008/07/16/confessions-of-a-developer-tool-hound/ the blog of Steve Bohlen])

If you’re like me and you like to both have your class source code well-organized and at the same time are annoyed at having to remember to scroll back up to the top of your class just to define a new field in the ‘right’ place, then the DXCore CR_ClassCleaner plug-in is for you.

!ClassCleaner allows you to add code to your class (methods, fields, properties, enums, constants, whatever) and have !ClassCleaner properly reorganize your class for you with a single keystroke (the keybinding of which you control when you configure it).  This gives you the freedom to just add a new method, etc. anywhere in your class and have !ClassCleaner properly relocate it within the class’ source file when you invoke it — no more jumping around in your source file before you add a method or a field to ensure adherence to some (arbitrary!) code-organization standard (preference smile_teeth).

!ClassCleaner provides a completely configurable order of the elements that you want it to relocate in your class source file, offers options to either ‘organize-with-regions’ if you’re like me and prefer #region tags in your files or ‘organize-without-regions’ if you think that code-folding is evil.  So that your whole team can use the same !ClassCleaner settings, !ClassCleaner supports importing and exporting its settings so that all of your team’s classes can be organized the same way (and so that running ClassCleaner on existing code doesn’t cause all kinds of trouble when you DIFF your code against your buddy’s before merging/committing it smile_omg).  

=== Credits ===
Written by John Luiff